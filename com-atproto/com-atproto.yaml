openapi: 3.0.0
info:
  title: AT Protocol Server API
  description: Unofficial OpenAPI specification for the AT Protocols native server
    endpoints.
  contact:
    email: torin@imp.sh
  license:
    name: MIT
    url: https://opensource.org/license/mit/
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/impsh/Bluesky-API/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /disableAccountInvites:
    post:
      tags:
      - com.atproto.admin
      summary: "Disable an account from receiving new invite codes, but does not invalidate\
        \ existing codes"
      requestBody:
        content:
          application/json:
            schema:
              required:
              - account
              type: object
              properties:
                account:
                  type: string
                  format: did
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
  /disableInviteCodes:
    post:
      tags:
      - com.atproto.admin
      summary: Disable some set of codes and/or all codes associated with a set of
        users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                codes:
                  type: array
                  items:
                    type: string
                accounts:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
  /enableAccountInvites:
    post:
      tags:
      - com.atproto.admin
      summary: Re-enable an accounts ability to receive invite codes
      requestBody:
        content:
          application/json:
            schema:
              required:
              - account
              type: object
              properties:
                account:
                  type: string
                  format: did
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
  /getInviteCodes:
    get:
      tags:
      - com.atproto.admin
      summary: Admin view of invite codes
      parameters:
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: recent
          enum:
          - recent
          - usage
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - codes
                type: object
                properties:
                  cursor:
                    type: string
                  codes:
                    type: array
                    items:
                      $ref: '#/components/schemas/inviteCode'
        "400":
          description: Invalid input
  /getModerationAction:
    get:
      tags:
      - com.atproto.admin
      summary: View details about a moderation action.
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actionViewDetail'
        "400":
          description: Invalid input
  /getModerationActions:
    get:
      tags:
      - com.atproto.admin
      summary: List moderation actions related to a subject.
      parameters:
      - name: subject
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - actions
                type: object
                properties:
                  cursor:
                    type: string
                  actions:
                    type: array
                    items:
                      $ref: '#/components/schemas/actionView'
        "400":
          description: Invalid input
  /getModerationReport:
    get:
      tags:
      - com.atproto.admin
      summary: View details about a moderation report.
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportViewDetail'
        "400":
          description: Invalid input
  /getModerationReports:
    get:
      tags:
      - com.atproto.admin
      summary: List moderation reports related to a subject.
      parameters:
      - name: subject
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resolved
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: actionType
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - com.atproto.admin.defs#takedown
          - com.atproto.admin.defs#flag
          - com.atproto.admin.defs#acknowledge
          - com.atproto.admin.defs#escalate
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - reports
                type: object
                properties:
                  cursor:
                    type: string
                  reports:
                    type: array
                    items:
                      $ref: '#/components/schemas/reportView'
        "400":
          description: Invalid input
  /getRecordViewDetail:
    get:
      tags:
      - com.atproto.admin
      summary: View details about a record.
      parameters:
      - name: uri
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-uri
      - name: cid
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: cid
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recordViewDetail'
        "400":
          description: Invalid input
  /getRepo:
    get:
      tags:
      - com.atproto.admin
      summary: View details about a repository.
      parameters:
      - name: did
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: did
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repoViewDetail'
        "400":
          description: Invalid input
  /resolveModerationReports:
    post:
      tags:
      - com.atproto.admin
      summary: Resolve moderation reports by an action.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - actionId
              - createdBy
              - reportIds
              type: object
              properties:
                actionId:
                  type: integer
                reportIds:
                  type: array
                  items:
                    type: integer
                createdBy:
                  type: string
                  format: did
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actionView'
        "400":
          description: Invalid input
  /reverseModerationAction:
    post:
      tags:
      - com.atproto.admin
      summary: Reverse a moderation action.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - createdBy
              - id
              - reason
              type: object
              properties:
                id:
                  type: integer
                reason:
                  type: string
                createdBy:
                  type: string
                  format: did
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actionView'
        "400":
          description: Invalid input
  /searchRepos:
    get:
      tags:
      - com.atproto.admin
      summary: Find repositories based on a search term.
      parameters:
      - name: term
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: invitedBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - repos
                type: object
                properties:
                  cursor:
                    type: string
                  repos:
                    type: array
                    items:
                      $ref: '#/components/schemas/repoView'
        "400":
          description: Invalid input
  /takeModerationAction:
    post:
      tags:
      - com.atproto.admin
      summary: Take a moderation action on a repo.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - action
              - createdBy
              - reason
              - subject
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - com.atproto.admin.defs#takedown
                  - com.atproto.admin.defs#flag
                  - com.atproto.admin.defs#acknowledge
                subject:
                  oneOf:
                  - $ref: '#/components/schemas/repoRef'
                  - $ref: '#/components/schemas/strongRef'
                subjectBlobCids:
                  type: array
                  items:
                    type: string
                    format: cid
                createLabelVals:
                  type: array
                  items:
                    type: string
                negateLabelVals:
                  type: array
                  items:
                    type: string
                reason:
                  type: string
                createdBy:
                  type: string
                  format: did
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actionView'
        "400":
          description: Invalid input
        "409":
          description: SubjectHasAction error
  /updateAccountHandle:
    post:
      tags:
      - com.atproto.admin
      summary: Administrative action to update an account's handle.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - did
              - handle
              type: object
              properties:
                did:
                  type: string
                  format: did
                handle:
                  type: string
                  format: handle
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
  /updateAccountEmail:
    post:
      tags:
      - com.atproto.admin
      summary: Administrative action to update an account's email.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - account
              - email
              type: object
              properties:
                account:
                  type: string
                  description: The handle or DID of the repo.
                  format: at-identifier
                email:
                  type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
  /resolveHandle:
    get:
      tags:
      - com.atproto.identity
      summary: Provides the DID of a repo.
      description: Provides the DID of a repo.
      operationId: com.atproto.identity.resolveHandle
      parameters:
      - name: handle
        in: query
        description: "The handle to resolve. If not supplied, will resolve the host's\
          \ own handle."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: handle
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveHandleOutput'
  /updateHandle:
    post:
      tags:
      - com.atproto.identity
      summary: Updates the handle of the account.
      description: Updates the handle of the account.
      operationId: com.atproto.identity.updateHandle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHandleInput'
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
        "500":
          description: Internal Server Error
  /queryLabels:
    get:
      tags:
      - com.atproto.label
      summary: Find labels relevant to the provided URI patterns.
      operationId: queryLabels
      parameters:
      - name: uriPatterns
        in: query
        description: "List of AT URI patterns to match (boolean 'OR'). Each may be\
          \ a prefix (ending with '*'; will match inclusive of the string leading\
          \ to '*'), or a full URI"
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: sources
        in: query
        description: Optional list of label sources (DIDs) to filter on
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: did
      - name: limit
        in: query
        description: The maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 250
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        description: Cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                - labels
                type: object
                properties:
                  cursor:
                    type: string
                  labels:
                    type: array
                    items:
                      $ref: '#/components/schemas/Label'
  /subscribeLabels:
    post:
      tags:
      - com.atproto.label
      summary: Subscribe to label updates.
      operationId: subscribeLabels
      requestBody:
        description: Cursor to start the subscription from
        content:
          application/json:
            schema:
              type: object
              properties:
                cursor:
                  type: integer
                  description: The last known event to backfill from.
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  seq:
                    type: integer
                  labels:
                    type: array
                    items:
                      $ref: '#/components/schemas/Label'
        "400":
          description: Future cursor error
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    enum:
                    - OutdatedCursor
                  message:
                    type: string
  /createReport:
    post:
      tags:
      - com.atproto.moderation
      summary: Report a repo or a record.
      operationId: createReport
      requestBody:
        description: Report details
        content:
          application/json:
            schema:
              required:
              - reasonType
              - subject
              type: object
              properties:
                reasonType:
                  $ref: '#/components/schemas/ReasonType'
                reason:
                  type: string
                subject:
                  oneOf:
                  - $ref: '#/components/schemas/RepoRef'
                  - $ref: '#/components/schemas/StrongRef'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                - createdAt
                - id
                - reasonType
                - reportedBy
                - subject
                type: object
                properties:
                  id:
                    type: integer
                  reasonType:
                    $ref: '#/components/schemas/ReasonType'
                  reason:
                    type: string
                  subject:
                    oneOf:
                    - $ref: '#/components/schemas/RepoRef'
                    - $ref: '#/components/schemas/StrongRef'
                  reportedBy:
                    type: string
                    format: did
                  createdAt:
                    type: string
                    format: datetime
  /applyWrites:
    post:
      tags:
      - com.atproto.repo
      summary: "Apply a batch transaction of creates, updates, and deletes."
      description: "Apply a batch transaction of creates, updates, and deletes."
      operationId: com.atproto.repo.applyWrites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyWritesInput'
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: InvalidSwap error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidSwapError'
  /createRecord:
    post:
      tags:
      - com.atproto.repo
      summary: Create a new record.
      description: Create a new record.
      operationId: com.atproto.repo.createRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecordInput'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecordOutput'
        "400":
          description: InvalidSwap
          content: {}
  /putRecord:
    post:
      tags:
      - com.atproto.repo
      summary: "Write a record, creating or updating it as needed."
      description: "Write a record, creating or updating it as needed."
      operationId: com.atproto.repo.putRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecordInput'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecordOutput'
        "400":
          description: InvalidSwap
          content: {}
  /deleteRecord:
    post:
      tags:
      - com.atproto.repo
      summary: "Delete a record, or ensure it doesn't exist."
      description: "Delete a record, or ensure it doesn't exist."
      operationId: com.atproto.repo.deleteRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRecordInput'
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: InvalidSwap
          content: {}
  /getRecord:
    get:
      tags:
      - com.atproto.repo
      summary: Get a record
      description: Get a record.
      operationId: com.atproto.repo.getRecord
      parameters:
      - name: repo
        in: query
        description: The handle or DID of the repo.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-identifier
      - name: collection
        in: query
        description: The NSID of the record collection.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: nsid
      - name: rkey
        in: query
        description: The key of the record.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: cid
        in: query
        description: "The CID of the version of the record. If not specified, then\
          \ return the most recent version."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: cid
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
  /listRecords:
    get:
      tags:
      - com.atproto.repo
      summary: List a range of records in a collection
      description: List a range of records in a collection.
      operationId: com.atproto.repo.listRecords
      parameters:
      - name: repo
        in: query
        description: The handle or DID of the repo.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-identifier
      - name: collection
        in: query
        description: The NSID of the record type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: nsid
      - name: limit
        in: query
        description: The number of records to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: reverse
        in: query
        description: Reverse the order of the returned records?
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - records
                type: object
                properties:
                  cursor:
                    type: string
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/Record'
  /describeRepo:
    get:
      tags:
      - com.atproto.repo
      summary: "Get information about the repo, including the list of collections."
      description: "Get information about the repo, including the list of collections."
      operationId: com.atproto.repo.describeRepo
      parameters:
      - name: repo
        in: query
        description: The handle or DID of the repo.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-identifier
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoDescription'
  /rebaseRepo:
    post:
      tags:
      - com.atproto.repo
      summary: Simple rebase of repo that deletes history
      description: Simple rebase of repo that deletes history
      operationId: com.atproto.repo.rebaseRepo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebaseRepoInput'
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: InvalidSwap
          content: {}
  /uploadBlob:
    post:
      tags:
      - com.atproto.repo
      summary: Upload a new blob to be added to repo in a later request.
      description: Upload a new blob to be added to repo in a later request.
      operationId: com.atproto.repo.uploadBlob
      requestBody:
        content:
          '*/*': {}
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadBlobOutput'
  /createAccount:
    post:
      tags:
      - com.atproto.server
      summary: Create an account.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - email
              - handle
              - password
              type: object
              properties:
                email:
                  type: string
                handle:
                  type: string
                  format: handle
                did:
                  type: string
                  format: did
                inviteCode:
                  type: string
                password:
                  type: string
                recoveryKey:
                  type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - accessJwt
                - did
                - handle
                - refreshJwt
                type: object
                properties:
                  accessJwt:
                    type: string
                  refreshJwt:
                    type: string
                  handle:
                    type: string
                    format: handle
                  did:
                    type: string
                    format: did
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                    - InvalidHandle
                    - InvalidPassword
                    - InvalidInviteCode
                    - HandleNotAvailable
                    - UnsupportedDomain
                    - UnresolvableDid
                    - IncompatibleDidDoc
  /createAppPassword:
    post:
      tags:
      - com.atproto.server
      summary: Create an app-specific password.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - createdAt
                - name
                - password
                type: object
                properties:
                  name:
                    type: string
                  password:
                    type: string
                  createdAt:
                    type: string
                    format: datetime
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                    - AccountTakedown
  /createInviteCode:
    post:
      tags:
      - com.atproto.server
      summary: Create an invite code.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - useCount
              type: object
              properties:
                useCount:
                  type: integer
                forAccount:
                  type: string
                  format: did
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - code
                type: object
                properties:
                  code:
                    type: string
        "400":
          description: Invalid input
  /createInviteCodes:
    post:
      tags:
      - com.atproto.server
      summary: Create invite codes.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - codeCount
              - useCount
              type: object
              properties:
                codeCount:
                  type: integer
                  default: 1
                useCount:
                  type: integer
                forAccounts:
                  type: array
                  items:
                    type: string
                    format: did
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - codes
                type: object
                properties:
                  codes:
                    type: array
                    items:
                      $ref: '#/components/schemas/accountCodes'
        "400":
          description: Invalid input
  /createSession:
    post:
      tags:
      - com.atproto.server
      summary: Create an authentication session.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - identifier
              - password
              type: object
              properties:
                identifier:
                  type: string
                  description: Handle or other identifier supported by the server
                    for the authenticating user.
                password:
                  type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - accessJwt
                - did
                - handle
                - refreshJwt
                type: object
                properties:
                  accessJwt:
                    type: string
                  refreshJwt:
                    type: string
                  handle:
                    type: string
                    format: handle
                  did:
                    type: string
                    format: did
                  email:
                    type: string
        "400":
          description: Invalid input
  /deleteAccount:
    post:
      tags:
      - com.atproto.server
      summary: Delete a user account with a token and password
      requestBody:
        content:
          application/json:
            schema:
              required:
              - did
              - password
              - token
              type: object
              properties:
                did:
                  type: string
                  format: did
                password:
                  type: string
                token:
                  type: string
        required: true
      responses:
        "200":
          description: Account successfully deleted
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ExpiredTokenError'
                - $ref: '#/components/schemas/InvalidTokenError'
  /deleteSession:
    post:
      tags:
      - com.atproto.server
      summary: Delete the current session
      responses:
        "200":
          description: Session successfully deleted
  /describeServer:
    get:
      tags:
      - com.atproto.server
      summary: Get a document describing the service's accounts configuration
      responses:
        "200":
          description: Document describing the service's accounts configuration
          content:
            application/json:
              schema:
                required:
                - availableUserDomains
                type: object
                properties:
                  inviteCodeRequired:
                    type: boolean
                  availableUserDomains:
                    type: array
                    items:
                      type: string
                  links:
                    $ref: '#/components/schemas/links'
  /getAccountInviteCodes:
    get:
      tags:
      - com.atproto.server
      summary: Get all invite codes for a given account
      parameters:
      - name: includeUsed
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: createAvailable
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: All invite codes for a given account
          content:
            application/json:
              schema:
                required:
                - codes
                type: object
                properties:
                  codes:
                    type: array
                    items:
                      $ref: '#/components/schemas/inviteCode'
        "400":
          description: Duplicate Create Error
          content: {}
  /getSession:
    get:
      tags:
      - com.atproto.server
      summary: Get information about the current session
      responses:
        "200":
          description: Information about the current session
          content:
            application/json:
              schema:
                required:
                - did
                - handle
                type: object
                properties:
                  handle:
                    type: string
                    format: handle
                  did:
                    type: string
                    format: did
                  email:
                    type: string
  /listAppPasswords:
    get:
      tags:
      - com.atproto.server
      summary: List all app-specific passwords
      responses:
        "200":
          description: List of all app-specific passwords
          content:
            application/json:
              schema:
                required:
                - passwords
                type: object
                properties:
                  passwords:
                    type: array
                    items:
                      required:
                      - createdAt
                      - name
                      type: object
                      properties:
                        name:
                          type: string
                        createdAt:
                          type: string
                          format: datetime
        "400":
          description: AccountTakedown
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /refreshSession:
    post:
      tags:
      - com.atproto.server
      summary: Refresh an authentication session.
      responses:
        "200":
          description: Refreshed session information
          content:
            application/json:
              schema:
                required:
                - accessJwt
                - did
                - handle
                - refreshJwt
                type: object
                properties:
                  accessJwt:
                    type: string
                  refreshJwt:
                    type: string
                  handle:
                    type: string
                    format: handle
                  did:
                    type: string
                    format: did
        "400":
          description: AccountTakedown
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /requestAccountDelete:
    post:
      tags:
      - com.atproto.server
      summary: Initiate a user account deletion via email.
      responses:
        "200":
          description: Account deletion request initiated
  /requestPasswordReset:
    post:
      tags:
      - com.atproto.server
      summary: Initiate a user account password reset via email.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - email
              type: object
              properties:
                email:
                  type: string
        required: true
      responses:
        "200":
          description: Password reset request initiated
  /resetPassword:
    post:
      tags:
      - com.atproto.server
      summary: Reset a user account password using a token.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - password
              - token
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
        required: true
      responses:
        "200":
          description: Password reset successful
        "400":
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: ExpiredToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /revokeAppPassword:
    post:
      tags:
      - com.atproto.server
      summary: Revoke an app-specific password by name.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              type: object
              properties:
                name:
                  type: string
        required: true
      responses:
        "200":
          description: App-specific password revoked successfully
components:
  schemas:
    ActionType:
      type: string
      description: Type of moderation action
      enum:
      - takedown
      - flag
      - acknowledge
      - escalate
    ActionView:
      required:
      - action
      - createdAt
      - createdBy
      - id
      - reason
      - resolvedReportIds
      - subject
      - subjectBlobCids
      type: object
      properties:
        id:
          type: integer
        action:
          $ref: '#/components/schemas/ActionType'
        subject:
          oneOf:
          - $ref: '#/components/schemas/repoRef'
          - $ref: '#/components/schemas/strongRef'
        subjectBlobCids:
          type: array
          items:
            type: string
        createLabelVals:
          type: array
          items:
            type: string
        negateLabelVals:
          type: array
          items:
            type: string
        reason:
          type: string
        createdBy:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
        reversal:
          $ref: '#/components/schemas/ActionReversal'
        resolvedReportIds:
          type: array
          items:
            type: integer
    ActionViewDetail:
      required:
      - action
      - createdAt
      - createdBy
      - id
      - reason
      - resolvedReports
      - subject
      - subjectBlobs
      type: object
      properties:
        id:
          type: integer
        action:
          $ref: '#/components/schemas/ActionType'
        subject:
          oneOf:
          - $ref: /components/schemas/repoView
          - $ref: /components/schemas/recordView
        subjectBlobs:
          type: array
          items:
            $ref: '#/components/schemas/blobView'
        createLabelVals:
          type: array
          items:
            type: string
        negateLabelVals:
          type: array
          items:
            type: string
        reason:
          type: string
        createdBy:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
        reversal:
          $ref: '#/components/schemas/ActionReversal'
        resolvedReports:
          type: array
          items:
            $ref: '#/components/schemas/reportView'
    ActionReversal:
      required:
      - action
      - createdAt
      - createdBy
      - id
      - subject
      - subjectBlobCids
      type: object
      properties:
        id:
          type: integer
        action:
          $ref: '#/components/schemas/ActionType'
        subject:
          oneOf:
          - $ref: '#/components/schemas/repoRef'
          - $ref: '#/components/schemas/strongRef'
        subjectBlobCids:
          type: array
          items:
            type: string
        createdBy:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
    ReportType:
      type: string
      description: Type of report
      enum:
      - spam
      - harassment
      - harmfulDangerousActs
      - violentExtremistContent
      - childEndangerment
      - unwantedSexualContent
      - hatefulAbusiveContent
      - other
    ReportStatus:
      type: string
      description: Status of the report
      enum:
      - open
      - inProgress
      - resolved
    ReportView:
      required:
      - createdAt
      - createdBy
      - id
      - reason
      - reportType
      - resolvedByActionId
      - status
      - subject
      - subjectBlobCids
      type: object
      properties:
        id:
          type: integer
        reportType:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        subject:
          oneOf:
          - $ref: '#/components/schemas/repoRef'
          - $ref: '#/components/schemas/strongRef'
        subjectBlobCids:
          type: array
          items:
            type: string
        reason:
          type: string
        createdBy:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
        resolvedByActionId:
          type: integer
    ReportViewDetail:
      required:
      - createdAt
      - createdBy
      - id
      - reason
      - reportType
      - resolvedByAction
      - status
      - subject
      - subjectBlobs
      type: object
      properties:
        id:
          type: integer
        reportType:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        subject:
          oneOf:
          - $ref: '#/components/schemas/repoView'
          - $ref: '#/components/schemas/recordView'
        subjectBlobs:
          type: array
          items:
            $ref: '#/components/schemas/Blob'
        reason:
          type: string
        createdBy:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
        resolvedByAction:
          $ref: '#/components/schemas/ActionViewDetail'
    RepoView:
      required:
      - did
      - handle
      - indexedAt
      - moderation
      - relatedRecords
      type: object
      properties:
        did:
          type: string
        handle:
          type: string
        email:
          type: string
        relatedRecords:
          type: array
          items:
            type: string
        indexedAt:
          type: string
          format: date-time
        moderation:
          $ref: '#/components/schemas/Moderation'
        invitedBy:
          $ref: '#/components/schemas/InviteCode'
        invitesDisabled:
          type: boolean
    RepoViewDetail:
      allOf:
      - $ref: '#/components/schemas/RepoView'
      - required:
        - invites
        - labels
        type: object
        properties:
          moderation:
            $ref: '#/components/schemas/ModerationDetail'
          labels:
            type: array
            items:
              $ref: '#/components/schemas/Label'
          invites:
            type: array
            items:
              $ref: '#/components/schemas/InviteCode'
    RepoRef:
      required:
      - did
      type: object
      properties:
        did:
          type: string
    RecordView:
      required:
      - blobCids
      - cid
      - indexedAt
      - moderation
      - repo
      - uri
      - value
      type: object
      properties:
        uri:
          type: string
        cid:
          type: string
        value:
          type: string
        blobCids:
          type: array
          items:
            type: string
        indexedAt:
          type: string
          format: date-time
        moderation:
          $ref: '#/components/schemas/Moderation'
        repo:
          $ref: '#/components/schemas/RepoView'
    RecordViewDetail:
      allOf:
      - $ref: '#/components/schemas/RecordView'
      - required:
        - blobs
        - labels
        type: object
        properties:
          blobs:
            type: array
            items:
              $ref: '#/components/schemas/BlobView'
          labels:
            type: array
            items:
              $ref: '#/components/schemas/Label'
          moderation:
            $ref: '#/components/schemas/ModerationDetail'
    Moderation:
      type: object
      properties:
        currentAction:
          $ref: '#/components/schemas/ActionViewCurrent'
    ModerationDetail:
      allOf:
      - $ref: '#/components/schemas/Moderation'
      - required:
        - actions
        - reports
        type: object
        properties:
          actions:
            type: array
            items:
              $ref: '#/components/schemas/ActionView'
          reports:
            type: array
            items:
              $ref: '#/components/schemas/ReportView'
    BlobView:
      required:
      - cid
      - createdAt
      - mimeType
      - size
      type: object
      properties:
        cid:
          type: string
        mimeType:
          type: string
        size:
          type: integer
        createdAt:
          type: string
          format: date-time
        details:
          oneOf:
          - $ref: '#/components/schemas/ImageDetails'
          - $ref: '#/components/schemas/VideoDetails'
        moderation:
          $ref: '#/components/schemas/Moderation'
    ImageDetails:
      required:
      - height
      - width
      type: object
      properties:
        width:
          type: integer
        height:
          type: integer
    VideoDetails:
      required:
      - height
      - length
      - width
      type: object
      properties:
        width:
          type: integer
        height:
          type: integer
        length:
          type: integer
    ResolveHandleOutput:
      required:
      - did
      type: object
      properties:
        did:
          type: string
          format: did
    UpdateHandleInput:
      required:
      - handle
      type: object
      properties:
        handle:
          type: string
          format: handle
    Label:
      required:
      - cts
      - src
      - uri
      - val
      type: object
      properties:
        src:
          type: string
          description: DID of the actor who created this label
          format: did
        uri:
          type: string
          description: "AT URI of the record, repository (account), or other resource\
            \ which this label applies to"
          format: uri
        cid:
          type: string
          description: "optionally, CID specifying the specific version of 'uri' resource\
            \ this label applies to"
          format: cid
        val:
          maxLength: 128
          type: string
          description: the short string name of the value or type of this label
        neg:
          type: boolean
          description: "if true, this is a negation label, overwriting a previous\
            \ label"
        cts:
          type: string
          description: timestamp when this label was created
          format: datetime
    ReasonType:
      type: string
      description: Type of report reason
      enum:
      - '#/components/schemas/reasonSpam'
      - '#/components/schemas/reasonViolation'
      - '#/components/schemas/reasonMisleading'
      - '#/components/schemas/reasonSexual'
      - '#/components/schemas/reasonRude'
      - '#/components/schemas/reasonOther'
    ReasonSpam:
      type: string
    ReasonViolation:
      type: string
      description: "Direct violation of server rules, laws, terms of service"
    ReasonMisleading:
      type: string
      description: "Misleading identity, affiliation, or content"
    ReasonSexual:
      type: string
      description: Unwanted or mis-labeled sexual content
    ReasonRude:
      type: string
      description: "Rude, harassing, explicit, or otherwise unwelcoming behavior"
    ReasonOther:
      type: string
    ApplyWritesInput:
      required:
      - repo
      - writes
      type: object
      properties:
        repo:
          type: string
          description: The handle or DID of the repo.
          format: at-identifier
        validate:
          type: boolean
          description: Validate the records?
          default: true
        writes:
          type: array
          items:
            $ref: '#/components/schemas/WriteAction'
        swapCommit:
          type: string
          format: cid
    WriteAction:
      type: object
      oneOf:
      - $ref: '#/components/schemas/Create'
      - $ref: '#/components/schemas/Update'
      - $ref: '#/components/schemas/Delete'
    Create:
      required:
      - action
      - collection
      - value
      type: object
      properties:
        action:
          type: string
          enum:
          - create
        collection:
          type: string
          format: nsid
        rkey:
          type: string
        value:
          type: string
    Update:
      required:
      - action
      - collection
      - rkey
      - value
      type: object
      properties:
        action:
          type: string
          enum:
          - update
        collection:
          type: string
          format: nsid
        rkey:
          type: string
        value:
          type: string
    Delete:
      required:
      - action
      - collection
      - rkey
      type: object
      properties:
        action:
          type: string
          enum:
          - delete
        collection:
          type: string
          format: nsid
        rkey:
          type: string
    InvalidSwapError:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          enum:
          - InvalidSwap
    Record:
      required:
      - cid
      - uri
      - value
      type: object
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
        value:
          type: string
        RepoDescription:
          required:
          - collections
          - did
          - didDoc
          - handle
          - handleIsCorrect
          type: object
          properties:
            handle:
              type: string
              format: handle
            did:
              type: string
              format: did
            didDoc:
              type: string
            collections:
              type: array
              items:
                type: string
                format: nsid
            handleIsCorrect:
              type: boolean
    CreateRecordInput:
      required:
      - collection
      - record
      - repo
      type: object
      properties:
        repo:
          type: string
          description: The handle or DID of the repo.
          format: at-identifier
        collection:
          type: string
          description: The NSID of the record collection.
          format: nsid
        rkey:
          type: string
          description: The key of the record.
        validate:
          type: boolean
          description: Validate the record?
          default: true
        record:
          type: object
          description: The record to create.
        swapCommit:
          type: string
          description: Compare and swap with the previous commit by cid.
          format: cid
    CreateRecordOutput:
      required:
      - cid
      - uri
      type: object
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
    DeleteRecordInput:
      required:
      - collection
      - repo
      - rkey
      type: object
      properties:
        repo:
          type: string
          description: The handle or DID of the repo.
          format: at-identifier
        collection:
          type: string
          description: The NSID of the record collection.
          format: nsid
        rkey:
          type: string
          description: The key of the record.
        swapRecord:
          type: string
          description: Compare and swap with the previous record by cid.
          format: cid
        swapCommit:
          type: string
          description: Compare and swap with the previous commit by cid.
          format: cid
    PutRecordInput:
      required:
      - collection
      - record
      - repo
      - rkey
      type: object
      properties:
        repo:
          type: string
          description: The handle or DID of the repo.
          format: at-identifier
        collection:
          type: string
          description: The NSID of the record collection.
          format: nsid
        rkey:
          type: string
          description: The key of the record.
        validate:
          type: boolean
          description: Validate the record?
          default: true
        record:
          type: string
          description: The record to write.
        swapRecord:
          type: string
          description: Compare and swap with the previous record by cid.
          format: cid
          nullable: true
        swapCommit:
          type: string
          description: Compare and swap with the previous commit by cid.
          format: cid
    PutRecordOutput:
      required:
      - cid
      - uri
      type: object
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
    RebaseRepoInput:
      required:
      - repo
      type: object
      properties:
        repo:
          type: string
          description: The handle or DID of the repo.
          format: at-identifier
        swapCommit:
          type: string
          description: Compare and swap with the previous commit by cid.
          format: cid
    StrongRef:
      required:
      - cid
      - uri
      type: object
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
    UploadBlobOutput:
      required:
      - blob
      type: object
      properties:
        blob:
          type: string
          format: byte
    accountCodes:
      required:
      - account
      - codes
      type: object
      properties:
        account:
          type: string
        codes:
          type: array
          items:
            type: string
    ExpiredTokenError:
      type: object
      properties:
        name:
          type: string
          enum:
          - ExpiredToken
    InvalidTokenError:
      type: object
      properties:
        name:
          type: string
          enum:
          - InvalidToken
    links:
      type: object
      properties:
        privacyPolicy:
          type: string
        termsOfService:
          type: string
    inviteCode:
      required:
      - available
      - code
      - createdAt
      - createdBy
      - disabled
      - forAccount
      - uses
      type: object
      properties:
        code:
          type: string
        available:
          type: integer
        disabled:
          type: boolean
        forAccount:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
          format: datetime
        uses:
          type: array
          items:
            required:
            - usedAt
            - usedBy
            type: object
            properties:
              usedBy:
                type: string
                format: did
              usedAt:
                type: string
                format: datetime
    Error:
      type: object
      properties:
        error:
          type: string
