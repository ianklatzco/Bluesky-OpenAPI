openapi: 3.0.0
info:
  title: Bluesky API
  description: Unofficial OpenAPI specification for the AT Protocols native server
    endpoints.
  contact:
    email: torin@imp.sh
  license:
    name: MIT
    url: https://opensource.org/license/mit/
  version: "0.1"
servers:
- url: https://virtserver.swaggerhub.com/impsh/Bluesky-API/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /getPreferences:
    get:
      tags:
      - App.Bsky.actor
      summary: Get private preferences attached to the account.
      operationId: getPreferences
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                - preferences
                type: object
                properties:
                  preferences:
                    $ref: '#/components/schemas/Preferences'
  /getProfile:
    get:
      tags:
      - App.Bsky.actor
      summary: Get a detailed profile view of an actor.
      operationId: getProfile
      parameters:
      - name: actor
        in: query
        description: Identifier of the actor to get the profile for.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-identifier
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileViewDetailed'
  /getProfiles:
    get:
      tags:
      - App.Bsky.actor
      summary: Get detailed profile views of multiple actors.
      operationId: getProfiles
      parameters:
      - name: actors
        in: query
        description: Identifiers of the actors to get the profiles for.
        required: true
        style: form
        explode: true
        schema:
          maxItems: 25
          type: array
          items:
            type: string
            format: at-identifier
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                - profiles
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileViewDetailed'
  /getSuggestions:
    get:
      tags:
      - App.Bsky.actor
      summary: Get a list of actors suggested for following.
      description: Used in discovery UIs.
      operationId: getSuggestions
      parameters:
      - name: limit
        in: query
        description: The maximum number of suggested actors to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        description: A cursor for pagination.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                - actors
                type: object
                properties:
                  cursor:
                    type: string
                  actors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
  /putPreferences:
    post:
      tags:
      - App.Bsky.actor
      summary: Sets the private preferences attached to the account.
      operationId: putPreferences
      requestBody:
        content:
          application/json:
            schema:
              required:
              - preferences
              type: object
              properties:
                preferences:
                  $ref: '#/components/schemas/Preferences'
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
  /searchActors:
    get:
      tags:
      - App.Bsky.actor
      summary: Find actors matching search criteria.
      operationId: searchActors
      parameters:
      - name: term
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - actors
                type: object
                properties:
                  cursor:
                    type: string
                  actors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
  /searchActorsTypeahead:
    get:
      tags:
      - App.Bsky.actor
      summary: Find actor suggestions for a search term.
      operationId: searchActorsTypeahead
      parameters:
      - name: term
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - actors
                type: object
                properties:
                  actors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileViewBasic'
  /getAuthorFeed:
    get:
      tags:
      - app.bsky.feed
      parameters:
      - name: actor
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-identifier
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A view of an actor's feed
          content:
            application/json:
              schema:
                required:
                - feed
                type: object
                properties:
                  cursor:
                    type: string
                  feed:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeedViewPost'
        "400":
          description: Errors
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/BlockedActor'
                - $ref: '#/components/schemas/BlockedByActor'
  /getLikes:
    get:
      tags:
      - app.bsky.feed
      parameters:
      - name: uri
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-uri
      - name: cid
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: cid
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of likes for a specific post
          content:
            application/json:
              schema:
                required:
                - likes
                - uri
                type: object
                properties:
                  uri:
                    type: string
                    format: at-uri
                  cid:
                    type: string
                    format: cid
                  cursor:
                    type: string
                  likes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Like'
  /getPostThread:
    get:
      tags:
      - app.bsky.feed
      parameters:
      - name: uri
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-uri
      - name: depth
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: The post thread for a specific post
          content:
            application/json:
              schema:
                required:
                - thread
                type: object
                properties:
                  thread:
                    anyOf:
                    - $ref: '#/components/schemas/ThreadViewPost'
                    - $ref: '#/components/schemas/NotFoundPost'
                    - $ref: '#/components/schemas/BlockedPost'
        "404":
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
  /getPosts:
    get:
      tags:
      - app.bsky.feed
      parameters:
      - name: uris
        in: query
        required: true
        style: form
        explode: true
        schema:
          maxLength: 25
          type: array
          items:
            type: string
            format: at-uri
      responses:
        "200":
          description: A batch of specific posts
          content:
            application/json:
              schema:
                required:
                - posts
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostView'
  /repostedBy:
    get:
      tags:
      - app.bsky.feed
      parameters:
      - name: uri
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-uri
      - name: cid
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: cid
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The list of actors who have reposted a specific post
          content:
            application/json:
              schema:
                required:
                - repostedBy
                - uri
                type: object
                properties:
                  uri:
                    type: string
                    format: at-uri
                  cid:
                    type: string
                    format: cid
                  cursor:
                    type: string
                  repostedBy:
                    type: array
                    items:
                      $ref: ./app.bsky.actor.defs.yaml#/components/schemas/ProfileView
  /getTimeline:
    get:
      tags:
      - app.bsky.feed
      description: A view of the user's home timeline.
      parameters:
      - name: algorithm
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The user's home timeline
          content:
            application/json:
              schema:
                required:
                - feed
                type: object
                properties:
                  cursor:
                    type: string
                  feed:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeedViewPost'
  /follow:
    post:
      tags:
      - app.bsky.graph
      summary: A social follow.
      operationId: follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  tid:
                    type: string
                    description: The record key
                  record:
                    $ref: '#/components/schemas/Follow'
        "400":
          description: Invalid input
        "500":
          description: Unexpected error
  /getBlocks:
    get:
      tags:
      - app.bsky.graph
      summary: Who is the requester's account blocking?
      operationId: getBlocks
      parameters:
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  blocks:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
        "400":
          description: Invalid input
        "500":
          description: Unexpected error
  /getFollowers:
    get:
      tags:
      - app.bsky.graph
      summary: Who is following an actor?
      operationId: getFollowers
      parameters:
      - name: actor
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-identifier
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  subject:
                    $ref: '#/components/schemas/ProfileView'
                  cursor:
                    type: string
                  followers:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
        "400":
          description: Invalid input
        "500":
          description: Unexpected error
  /getFollows:
    get:
      tags:
      - app.bsky.graph
      summary: Who is an actor following?
      operationId: getFollows
      parameters:
      - name: actor
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-identifier
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  subject:
                    $ref: '#/components/schemas/ProfileView'
                  cursor:
                    type: string
                  follows:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
        "400":
          description: Invalid input
        "500":
          description: Unexpected error
  /getList:
    get:
      tags:
      - app.bsky.graph
      summary: Fetch a list of actors
      operationId: getList
      parameters:
      - name: list
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-uri
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  list:
                    $ref: '#/components/schemas/ListView'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListItemView'
        "400":
          description: Invalid input
        "500":
          description: Unexpected error
  /getListMutes:
    get:
      tags:
      - app.bsky.graph
      summary: Which lists is the requester's account muting?
      operationId: getListMutes
      parameters:
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  lists:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListView'
        "400":
          description: Invalid input
        "500":
          description: Unexpected error
  /getLists:
    get:
      tags:
      - app.bsky.graph
      summary: Fetch a list of lists that belong to an actor
      operationId: getLists
      parameters:
      - name: actor
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: at-identifier
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  lists:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListView'
        "400":
          description: Invalid input
        "500":
          description: Unexpected error
  /getMutes:
    get:
      tags:
      - app.bsky.graph
      summary: Who does the viewer mute?
      operationId: getMutes
      parameters:
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - mutes
                type: object
                properties:
                  cursor:
                    type: string
                  mutes:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
        "400":
          description: Invalid input
        "500":
          description: Unexpected error
  /muteActor:
    post:
      tags:
      - app.bsky.graph
      summary: Mute an actor by did or handle.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - actor
              type: object
              properties:
                actor:
                  type: string
                  description: Actor identifier
                  format: uri
        required: true
      responses:
        "200":
          description: Actor muted successfully
        "400":
          description: Invalid request
        "500":
          description: Internal server error
  /muteActorList:
    post:
      tags:
      - app.bsky.graph
      summary: Mute a list of actors.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - list
              type: object
              properties:
                list:
                  type: string
                  description: List identifier
                  format: uri
        required: true
      responses:
        "200":
          description: Actor list muted successfully
        "400":
          description: Invalid request
        "500":
          description: Internal server error
  /unmuteActor:
    post:
      tags:
      - app.bsky.graph
      summary: Unmute an actor by did or handle.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - actor
              type: object
              properties:
                actor:
                  type: string
                  description: Actor identifier
                  format: at-identifier
        required: true
      responses:
        "200":
          description: Actor unmuted successfully
        "400":
          description: Invalid request
        "500":
          description: Internal server error
  /unmuteActorList:
    post:
      tags:
      - app.bsky.graph
      summary: Unmute a list of actors.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - list
              type: object
              properties:
                list:
                  type: string
                  description: List URI
                  format: at-uri
        required: true
      responses:
        "200":
          description: Actors in the list unmuted successfully
        "400":
          description: Invalid request
        "500":
          description: Internal server error
  /getUnreadCount:
    get:
      tags:
      - app.bsky.notification
      summary: Get count of unread notifications.
      parameters:
      - name: seenAt
        in: query
        description: Datetime at which notifications were last seen
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - count
                type: object
                properties:
                  count:
                    type: integer
                    description: Count of unread notifications
        "400":
          description: Invalid request
        "500":
          description: Internal server error
  /listNotifications:
    get:
      tags:
      - app.bsky.notification
      summary: List notifications.
      parameters:
      - name: limit
        in: query
        description: Limit the number of notifications to fetch
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        description: Cursor for paginating through notifications
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: seenAt
        in: query
        description: Datetime at which notifications were last seen
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - notifications
                type: object
                properties:
                  cursor:
                    type: string
                    description: Cursor for the next page of notifications
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
        "400":
          description: Invalid request
        "500":
          description: Internal server error
  /updateSeen:
    put:
      tags:
      - app.bsky.notification
      summary: Notify server that the user has seen notifications.
      requestBody:
        content:
          application/json:
            schema:
              required:
              - seenAt
              type: object
              properties:
                seenAt:
                  type: string
                  format: date-time
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid request
        "500":
          description: Internal server error
  /popular:
    get:
      tags:
      - app.bsky.unspecced
      summary: An unspecced view of globally popular items
      parameters:
      - name: includeNsfw
        in: query
        description: Whether to include not safe for work items
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: cursor
        in: query
        description: Cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                required:
                - feed
                type: object
                properties:
                  cursor:
                    type: string
                  feed:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeedViewPost'
components:
  schemas:
    ProfileViewBasic:
      required:
      - did
      - handle
      type: object
      properties:
        did:
          type: string
          format: did
        handle:
          type: string
          format: handle
        displayName:
          maxLength: 640
          type: string
        avatar:
          type: string
        viewer:
          $ref: '#/components/schemas/ViewerState'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    ProfileView:
      required:
      - did
      - handle
      type: object
      properties:
        did:
          type: string
          format: did
        handle:
          type: string
          format: handle
        displayName:
          maxLength: 640
          type: string
        description:
          maxLength: 2560
          type: string
        avatar:
          type: string
        indexedAt:
          type: string
          format: date-time
        viewer:
          $ref: '#/components/schemas/ViewerState'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    ProfileViewDetailed:
      required:
      - did
      - handle
      type: object
      properties:
        did:
          type: string
          format: did
        handle:
          type: string
          format: handle
        displayName:
          maxLength: 640
          type: string
        description:
          maxLength: 2560
          type: string
        avatar:
          type: string
        banner:
          type: string
        followersCount:
          type: integer
        followsCount:
          type: integer
        postsCount:
          type: integer
        indexedAt:
          type: string
          format: date-time
        viewer:
          $ref: '#/components/schemas/ViewerState'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    ViewerState:
      type: object
      properties:
        muted:
          type: boolean
        mutedByList:
          $ref: '#/components/schemas/ListViewBasic'
        blockedBy:
          type: boolean
        blocking:
          type: string
          format: at-uri
        following:
          type: string
          format: at-uri
        followedBy:
          type: string
          format: at-uri
    Preferences:
      type: array
      items:
        oneOf:
        - $ref: '#/components/schemas/AdultContentPref'
        - $ref: '#/components/schemas/ContentLabelPref'
    AdultContentPref:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          default: false
    ContentLabelPref:
      required:
      - label
      - visibility
      type: object
      properties:
        label:
          type: string
        visibility:
          type: string
          enum:
          - show
          - warn
          - hide
    Label:
      required:
      - cts
      - src
      - uri
      - val
      type: object
      properties:
        src:
          type: string
          description: DID of the actor who created this label
          format: did
        uri:
          type: string
          description: "AT URI of the record, repository (account), or other resource\
            \ which this label applies to"
          format: uri
        cid:
          type: string
          description: "optionally, CID specifying the specific version of 'uri' resource\
            \ this label applies to"
          format: cid
        val:
          maxLength: 128
          type: string
          description: the short string name of the value or type of this label
        neg:
          type: boolean
          description: "if true, this is a negation label, overwriting a previous\
            \ label"
        cts:
          type: string
          description: timestamp when this label was created
          format: datetime
      description: "Metadata tag on an atproto resource (eg, repo or record)"
    ListViewBasic:
      type: object
    Profile:
      type: object
      properties:
        displayName:
          maxLength: 640
          type: string
        description:
          maxLength: 2560
          type: string
        avatar:
          type: string
          format: binary
        banner:
          type: string
          format: binary
    ExternalEmbed:
      required:
      - external
      type: object
      properties:
        external:
          $ref: '#/components/schemas/External'
    External:
      required:
      - description
      - title
      - uri
      type: object
      properties:
        uri:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        thumb:
          maxLength: 1000000
          type: string
          format: binary
    ExternalEmbedView:
      required:
      - external
      type: object
      properties:
        external:
          $ref: '#/components/schemas/ExternalView'
    ExternalView:
      required:
      - description
      - title
      - uri
      type: object
      properties:
        uri:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        thumb:
          type: string
    ImagesEmbed:
      required:
      - images
      type: object
      properties:
        images:
          maxItems: 4
          type: array
          items:
            $ref: '#/components/schemas/Image'
    Image:
      required:
      - alt
      - image
      type: object
      properties:
        image:
          maxLength: 1000000
          type: string
          format: binary
        alt:
          type: string
    ImagesEmbedView:
      required:
      - images
      type: object
      properties:
        images:
          maxItems: 4
          type: array
          items:
            $ref: '#/components/schemas/ImageView'
    ImageView:
      required:
      - alt
      - fullsize
      - thumb
      type: object
      properties:
        thumb:
          type: string
        fullsize:
          type: string
        alt:
          type: string
    RecordEmbed:
      required:
      - record
      type: object
      properties:
        record:
          $ref: '#/components/schemas/StrongRef'
    RecordEmbedView:
      required:
      - record
      type: object
      properties:
        record:
          type: object
          properties: {}
    ViewRecord:
      required:
      - author
      - cid
      - indexedAt
      - uri
      - value
      type: object
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
        author:
          $ref: '#/components/schemas/ProfileViewBasic'
        value:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        embeds:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/ImagesEmbedView'
            - $ref: '#/components/schemas/ExternalEmbedView'
            - $ref: '#/components/schemas/RecordEmbedView'
            - $ref: '#/components/schemas/RecordWithMediaEmbedView'
        indexedAt:
          type: string
          format: date-time
    ViewNotFound:
      required:
      - uri
      type: object
      properties:
        uri:
          type: string
          format: at-uri
    ViewBlocked:
      required:
      - uri
      type: object
      properties:
        uri:
          type: string
          format: at-uri
    RecordWithMediaEmbed:
      required:
      - media
      - record
      type: object
      properties:
        record:
          $ref: '#/components/schemas/RecordEmbed'
        media:
          oneOf:
          - $ref: '#/components/schemas/ImagesEmbed'
          - $ref: '#/components/schemas/ExternalEmbed'
    RecordWithMediaEmbedView:
      required:
      - media
      - record
      type: object
      properties:
        record:
          $ref: '#/components/schemas/RecordEmbedView'
        media:
          oneOf:
          - $ref: '#/components/schemas/ImagesEmbedView'
          - $ref: '#/components/schemas/ExternalEmbedView'
    PostView:
      required:
      - author
      - cid
      - indexedAt
      - record
      - uri
      type: object
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
        author:
          $ref: '#/components/schemas/ProfileViewBasic'
        record:
          type: unknown
        embed:
          oneOf:
          - $ref: '#/components/schemas/ImagesEmbedView'
          - $ref: '#/components/schemas/ExternalEmbedView'
          - $ref: l#/components/schemas/RecordEmbedView
          - $ref: '#/components/schemas/RecordWithMediaEmbedView'
        replyCount:
          type: integer
        repostCount:
          type: integer
        likeCount:
          type: integer
        indexedAt:
          type: string
          format: datetime
        viewer:
          $ref: '#/components/schemas/ViewerState'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    BlockedActor:
      type: object
      properties:
        name:
          type: string
    BlockedByActor:
      type: object
      properties:
        name:
          type: string
    Like:
      required:
      - actor
      - createdAt
      - indexedAt
      type: object
      properties:
        indexedAt:
          type: string
          format: datetime
        createdAt:
          type: string
          format: datetime
        actor:
          $ref: '#/components/schemas/ProfileView'
    FeedLike:
      required:
      - createdAt
      - subject
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/StrongRef'
        createdAt:
          type: string
          format: datetime
    Post:
      required:
      - createdAt
      - text
      type: object
      properties:
        text:
          maxLength: 3000
          type: string
          description: text
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        reply:
          $ref: '#/components/schemas/ReplyRef'
        embed:
          $ref: '#/components/schemas/Embed'
        createdAt:
          type: string
          format: datetime
    Repost:
      required:
      - createdAt
      - subject
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/StrongRef'
        createdAt:
          type: string
          format: datetime
    Block:
      required:
      - createdAt
      - subject
      type: object
      properties:
        subject:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
    Follow:
      required:
      - createdAt
      - subject
      type: object
      properties:
        subject:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
    ListRecord:
      required:
      - createdAt
      - name
      - purpose
      type: object
      properties:
        purpose:
          $ref: '#/components/schemas/ListPurpose'
        name:
          maxLength: 64
          minLength: 1
          type: string
        description:
          maxLength: 3000
          type: string
        descriptionFacets:
          type: array
          items:
            $ref: '#/components/schemas/RichTextFacet'
        avatar:
          type: string
          description: "A binary file with a maximum size of 1,000,000 bytes. Accepts\
            \ image/png or image/jpeg file types."
          format: binary
        createdAt:
          type: string
          format: date-time
    ListItemRecord:
      required:
      - createdAt
      - list
      - subject
      type: object
      properties:
        subject:
          type: string
          description: Decentralized identifier (DID)
          format: uri
        list:
          type: string
          description: Unique identifier of the list
          format: uri
        createdAt:
          type: string
          description: Creation date of the list item
          format: date-time
    Notification:
      required:
      - author
      - cid
      - indexedAt
      - isRead
      - reason
      - record
      - uri
      type: object
      properties:
        uri:
          type: string
          format: uri
        cid:
          type: string
        author:
          $ref: '#/components/schemas/ProfileView'
        reason:
          type: string
          enum:
          - like
          - repost
          - follow
          - mention
          - reply
          - quote
        reasonSubject:
          type: string
          format: uri
        record:
          type: object
        isRead:
          type: boolean
        indexedAt:
          type: string
          format: date-time
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    Facet:
      required:
      - features
      - index
      type: object
      properties:
        index:
          $ref: '#/components/schemas/ByteSlice'
        features:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/Mention'
            - $ref: '#/components/schemas/Link'
    Mention:
      required:
      - did
      type: object
      properties:
        did:
          type: string
          format: did
      description: A facet feature for actor mentions.
    Link:
      required:
      - uri
      type: object
      properties:
        uri:
          type: string
          format: uri
      description: A facet feature for links.
    ByteSlice:
      required:
      - byteEnd
      - byteStart
      type: object
      properties:
        byteStart:
          minimum: 0
          type: integer
        byteEnd:
          minimum: 0
          type: integer
      description: "A text segment. Start is inclusive, end is exclusive. Indices\
        \ are for utf8-encoded strings."
