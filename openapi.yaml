openapi: 3.0.1
info:
  title: Bluesky API
  description: OpenAPI spec for Bluesky's API.
  version: 'v1'
servers:
  - url: http://localhost:3005
paths:
  /app.bsky.actor.getProfile:
    get:
      operationId: getProfile
      summary: Get user profile by handle
      description: Fetches a user's profile using the user's handle, which is usually in the form of a.b.c or a.b. Ex. torin.bsky.social
      parameters:
        - in: query
          name: actor
          schema:
            type: string
          description: The handle of the user profile to fetch.
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          description: Bad Request. Missing handle parameter.
        '500':
          description: Internal server error. API error or proxy error.
  /app.bsky.actor.getProfiles:
    get:
      operationId: getProfiles
      summary: Get multiple profiles by their handles
      parameters:
        - name: actors
          in: query
          description: Comma-separated list of handles to get the profiles for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Array of profile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
        '400':
          description: Missing actors parameter
        '500':
          description: API error
  /com.atproto.identity.resolveHandle:
    get:
      operationId: resolveHandle
      summary: Resolve a user handle to its DID identifier
      parameters:
        - name: handle
          in: query
          description: The user handle to resolve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The DID identifier object
          content:
            application/json:
              schema:
                type: object
                properties:
                  did:
                    type: string
        '400':
          description: Missing handle parameter
        '500':
          description: API error
  /app.bsky.feed.getAuthorFeed:
    get:
      operationId: getAuthorFeed
      summary: Get a user's posts
      parameters:
        - name: actor
          in: query
          description: The user's handle
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: The number of posts to return (defaults to 20)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A successful response containing the user's posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  feed:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
                  cursor:
                    type: string
  /app.bsky.graph.getFollowers:
    get:
      operationId: getFollowers
      summary: Get the followers for a provided user
      parameters:
        - name: actor
          in: query
          description: The user's handle
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: The number of followers to return (defaults to 10)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A successful response containing the user's followers
          content:
            application/json:
              schema:
                type: object
                properties:
                  subject:
                    $ref: '#/components/schemas/Profile'
                  followers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
                  cursor:
                    type: string
        '400':
          description: Missing actor parameter
        '500':
          description: API error
  /app.bsky.graph.getFollows:
    get:
      operationId: getFollows
      summary: Get who a specific user is following
      parameters:
        - name: actor
          in: query
          description: The user's handle
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: The number of follows to return (defaults to 10)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A successful response containing the who the user is following
          content:
            application/json:
              schema:
                type: object
                properties:
                  subject:
                    $ref: '#/components/schemas/Profile'
                  followers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
                  cursor:
                    type: string
        '400':
          description: Missing actor parameter
        '500':
          description: API error
  /app.bsky.unspecced.getPopular:
    get:
      operationId: getPopular
      summary: Get most popular current posts
      description: Returns the most popular current posts with an optional limit.
      parameters:
        - name: limit
          in: query
          description: The maximum number of posts to return.
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  feed:
                    type: array
                    items:
                      $ref: '#/components/schemas/PopularPost'
  /misc.searchPosts:
    get:
      operationId: searchPosts
      summary: Search for posts containing the specified query by HTTP request https://search.bsky.social/search/posts
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: Text to search for
      responses:
        '200':
          description: Successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    tid:
                      type: string
                      description: Unique identifier for the post
                    cid:
                      type: string
                      description: Content identifier for the post
                    user:
                      type: object
                      properties:
                        did:
                          type: string
                          description: Decentralized identifier for the user
                        handle:
                          type: string
                          description: Handle of the user
                    post:
                      type: object
                      properties:
                        createdAt:
                          type: integer
                          format: int64
                          description: Creation timestamp of the post
                        text:
                          type: string
                          description: Text content of the post
                        user:
                          type: string
                          description: Handle of the user who created the post
        '400':
          description: Invalid search query
        '500':
          description: Internal server error
  /misc.searchProfiles:
    get:
      operationId: searchProfiles
      summary: Search for users by name or term by making an HTTP request to https://search.bsky.social/search/profiles
      description: Search for users by name or term. This can be used to find the most likely handle for a provided name. Ex "John Smith"
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: Term or name to search for in user profiles
      responses:
        '200':
          description: Successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    $type:
                      type: string
                      description: Type of the object (app.bsky.actor.profile)
                    avatar:
                      type: object
                      nullable: true
                      properties:
                        $type:
                          type: string
                          description: Type of the object (blob)
                        ref:
                          type: object
                          properties:
                            $link:
                              type: string
                              description: Reference link to the avatar image
                        mimeType:
                          type: string
                          description: MIME type of the avatar image
                        size:
                          type: integer
                          format: int32
                          description: Size of the avatar image in bytes
                    banner:
                      type: object
                      nullable: true
                      properties:
                        $type:
                          type: string
                          description: Type of the object (blob)
                        ref:
                          type: object
                          properties:
                            $link:
                              type: string
                              description: Reference link to the banner image
                        mimeType:
                          type: string
                          description: MIME type of the banner image
                        size:
                          type: integer
                          format: int32
                          description: Size of the banner image in bytes
                    description:
                      type: string
                      nullable: true
                      description: Description of the user profile
                    displayName:
                      type: string
                      description: Display name of the user
                    did:
                      type: string
                      description: Decentralized identifier of the user
        '400':
          description: Invalid search query
        '500':
          description: Internal server error
components:
  schemas:
    Profile:
      type: object
      properties:
        did:
          type: string
          example: "did:plc:cnd3evrzk24itsn3la76mea5"
        handle:
          type: string
          example: "skeet.engineer"
        displayName:
          type: string
          example: "juvenile human chicken"
        description:
          type: string
          example: "Second-order effect enthusiast → progressive campaigning → software engineer. I teach machines to resolve identities. Hella 🏳️‍🌈 and about to be a problem. (He/Himbo)"
        avatar:
          type: string
          example: "https://cdn.bsky.social/imgproxy/XL3MtdWOesDtgxdJ9APH5YlXe-0Yoe6Tyh9SgcazlR0/rs:fill:1000:1000:1:0/plain/bafkreifas5cditu4pnt3yi5ory77goeqx7x4ie3ta4d4nps7mpu7bwniiu@jpeg"
        banner:
          type: string
          example: "https://cdn.bsky.social/imgproxy/gwstOMUjJRi-xmHvJtTr3e880kV1FABx1HTfJHhrw58/rs:fill:3000:1000:1:0/plain/bafkreibdwgx5wyivhupj2epaj3wsevpdsynvu6a64tg4kxx6kc3rlacaxu@jpeg"
        followsCount:
          type: integer
          example: 248
        followersCount:
          type: integer
          example: 229
        postsCount:
          type: integer
          example: 812
        indexedAt:
          type: string
          format: date-time
          example: "2023-04-12T16:40:18.256Z"
        viewer:
          type: object
          properties:
            muted:
              type: boolean
              example: false
            blockedBy:
              type: boolean
              example: false
            following:
              type: string
              example: "at://did:plc:e42n3y4awcoz262k6x6bxu75/app.bsky.graph.follow/3jt7hmgjigv2z"
        labels:
          type: array
          items:
            type: string
    Post:
      type: object
      properties:
        post:
          $ref: '#/components/schemas/PostDetails'
        reply:
          $ref: '#/components/schemas/ReplyDetails'
        reason:
          $ref: '#/components/schemas/ReasonDetails'
    PostDetails:
      type: object
      properties:
        uri:
          type: string
        cid:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        record:
          $ref: '#/components/schemas/Record'
        embed:
          $ref: '#/components/schemas/EmbedView'
        replyCount:
          type: integer
        repostCount:
          type: integer
        likeCount:
          type: integer
        indexedAt:
          type: string
          format: date-time
        viewer:
          type: object
        labels:
          type: array
          items:
            type: string
    Author:
      type: object
      properties:
        did:
          type: string
        handle:
          type: string
        displayName:
          type: string
        avatar:
          type: string
        viewer:
          $ref: '#/components/schemas/Viewer'
        labels:
          type: array
          items:
            type: string
    Viewer:
      type: object
      properties:
        muted:
          type: boolean
        blockedBy:
          type: boolean
        following:
          type: string
    Record:
      type: object
      properties:
        text:
          type: string
        $type:
          type: string
        embed:
          $ref: '#/components/schemas/Embed'
        createdAt:
          type: string
          format: date-time
    Embed:
      type: object
      properties:
        $type:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageObject'
    ImageObject:
      type: object
      properties:
        alt:
          type: string
        image:
          $ref: '#/components/schemas/Blob'
    Blob:
      type: object
      properties:
        $type:
          type: string
        ref:
          $ref: '#/components/schemas/Ref'
        mimeType:
          type: string
        size:
          type: integer
    Ref:
      type: object
      properties:
        $link:
          type: string
    EmbedView:
      type: object
      properties:
        $type:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageView'
    ImageView:
      type: object
      properties:
        thumb:
          type: string
        fullsize:
          type: string
        alt:
          type: string
    ReplyDetails:
      type: object
      properties:
        root:
          $ref: '#/components/schemas/Post'
        parent:
          $ref: '#/components/schemas/Post'
    ReasonDetails:
      type: object
      properties:
        by:
          $ref: '#/components/schemas/Profile'
    PopularPost:
      type: object
      properties:
        post:
          $ref: '#/components/schemas/PostDetails'
        reply:
          $ref: '#/components/schemas/ReplyDetails'